//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoryQ.Execution.Rendering.RichHtml {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Dependencies {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Dependencies() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StoryQ.Execution.Rendering.RichHtml.Dependencies", typeof(Dependencies).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * jQuery JavaScript Library v1.4.2
        /// * http://jquery.com/
        /// *
        /// * Copyright 2010, John Resig
        /// * Dual licensed under the MIT or GPL Version 2 licenses.
        /// * http://jquery.org/license
        /// *
        /// * Includes Sizzle.js
        /// * http://sizzlejs.com/
        /// * Copyright 2010, The Dojo Foundation
        /// * Released under the MIT, BSD, and GPL Licenses.
        /// *
        /// * Date: Sat Feb 13 22:33:48 2010 -0500
        /// */
        ///(function(A,w){function ma(){if(!c.isReady){try{s.documentElement.doScroll(&quot;left&quot;)}catch(a){setTimeout(ma,1);return}c.ready()}}function Qa(a,b){b [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_1_4_2_min_js {
            get {
                return ResourceManager.GetString("jquery_1_4_2_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        ///* jQuery TagCloud 0.5.0
        ///* Copyright (c) 2008 Ron Valstar
        ///* Dual licensed under the MIT and GPL licenses:
        ///*   http://www.opensource.org/licenses/mit-license.php
        ///*   http://www.gnu.org/licenses/gpl.html
        ///*/
        ///(function(F){var C;var A={};var G={};var L=2.399963;F.tagcloud={id:&quot;TagCloud&quot;,version:&quot;0.5.0&quot;,defaults:{height:null,type:&quot;cloud&quot;,sizemax:20,sizemin:10,colormax:&quot;00F&quot;,colormin:&quot;B4D2FF&quot;,seed:null,power:0.5}};F.fn.extend({tagcloud:function(M){C=F.extend({},F.tagcloud.defaults,M);if(C.seed===null){C.s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_tagcloud_min_js {
            get {
                return ResourceManager.GetString("jquery_tagcloud_min_js", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Treeview 1.4 - jQuery plugin to hide and show branches of a tree
        /// * 
        /// * http://bassistance.de/jquery-plugins/jquery-plugin-treeview/
        /// * http://docs.jquery.com/Plugins/Treeview
        /// *
        /// * Copyright (c) 2007 Jörn Zaefferer
        /// *
        /// * Dual licensed under the MIT and GPL licenses:
        /// *   http://www.opensource.org/licenses/mit-license.php
        /// *   http://www.gnu.org/licenses/gpl.html
        /// *
        /// * Revision: $Id: jquery.treeview.js 4684 2008-02-07 19:08:06Z joern.zaefferer $
        /// *
        /// */;(function($){$.extend($.fn,{swapClass:function(c1 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_treeview_min_js {
            get {
                return ResourceManager.GetString("jquery_treeview_min_js", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap minus {
            get {
                object obj = ResourceManager.GetObject("minus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap plus {
            get {
                object obj = ResourceManager.GetObject("plus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;
        ///    &lt;!--Disable Quirks Mode in IE--&gt;
        ///    &lt;xsl:output method=&quot;html&quot;
        ///                indent=&quot;yes&quot;
        ///                doctype-public=&quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;
        ///                doctype-system=&quot;http://www.w3.org/TR/html4/loose.dtd&quot;
        ///            /&gt;
        ///
        ///    &lt;xsl:key name=&quot;tag-key&quot; match=&quot;Tag&quot; use=&quot;text()&quot;/&gt;
        ///
        ///
        ///    &lt;xsl:template match=&quot;StoryQRun&quot;&gt;
        ///        &lt;html&gt;
        ///            &lt;hea [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RichHtml_xslt {
            get {
                return ResourceManager.GetString("RichHtml_xslt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*Global*/
        ///body {
        ///    padding: 0;
        ///    margin: 0;
        ///    font-family: &quot;Segoe UI&quot;, Tahoma, Geneva, Verdana, serif;
        ///    font-size: 85%;
        ///    background-color: #ddd;
        ///    overflow-y: scroll;
        ///}
        ///
        ///h1 {
        ///    padding: 5px 5px 5px 15px;
        ///
        ///    margin: 0;
        ///}
        ///
        ///div {
        ///    padding: 0;
        ///    margin: 0;
        ///}
        ///
        ////*Layout*/
        ///#filters {
        ///    height: 260px;
        ///    background-color: #bbb;
        ///    border-bottom: 1px solid #999;
        ///}
        ///
        ///.halfPanel {
        ///    width: 50%;
        ///    float: left;
        ///}
        ///
        ///.halfPanel .border {
        ///    height: 260px;
        ///  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string storyq_css {
            get {
                return ResourceManager.GetString("storyq_css", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap storyq_icons {
            get {
                object obj = ResourceManager.GetObject("storyq_icons", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to $(document).ready(function() {
        ///
        ///    $(&quot;#tags&quot;).tagcloud({type:&quot;list&quot; ,colormin:&quot;555&quot;,colormax:&quot;000&quot;,seed:0});
        ///    $(&quot;#tree&quot;).treeview();
        ///
        ///    $(&quot;#tree a&quot;).click(function(event) {
        ///        event.preventDefault();
        ///        $(&quot;#tree a&quot;).removeClass(&quot;selected&quot;);
        ///        $(this).addClass(&quot;selected&quot;);
        ///        reFilter();
        ///        this.blur();
        ///
        ///    });
        ///
        ///    $(&quot;#tags a&quot;).click(function(event) {
        ///        event.preventDefault();
        ///        $(this).toggleClass(&quot;tagged&quot;);
        ///        reFilter();
        ///        this.blu [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string storyq_js {
            get {
                return ResourceManager.GetString("storyq_js", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap treeview_default {
            get {
                object obj = ResourceManager.GetObject("treeview_default", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_default_line {
            get {
                object obj = ResourceManager.GetObject("treeview_default_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
