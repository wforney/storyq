//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StoryQ.Execution.Rendering.Html {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class HtmlDependencies {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HtmlDependencies() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StoryQ.Execution.Rendering.Html.HtmlDependencies", typeof(HtmlDependencies).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap failed {
            get {
                object obj = ResourceManager.GetObject("failed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap failedproject {
            get {
                object obj = ResourceManager.GetObject("failedproject", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap failedscenario {
            get {
                object obj = ResourceManager.GetObject("failedscenario", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;
        ///  &lt;xsl:output method=&quot;html&quot; indent=&quot;yes&quot;/&gt;
        ///  &lt;xsl:template match=&quot;StoryQRun&quot;&gt;
        ///    &lt;html&gt;
        ///      &lt;head&gt;
        ///        &lt;title&gt;StoryQ test run&lt;/title&gt;
        ///        &lt;link rel=&quot;stylesheet&quot; href=&quot;css/jquery.treeview.css&quot; /&gt;
        ///        &lt;link rel=&quot;stylesheet&quot; href=&quot;css/screen.storyq.css&quot; /&gt;
        ///        &lt;link rel=&quot;stylesheet&quot; href=&quot;http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/start/jquery-ui.css [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Html {
            get {
                return ResourceManager.GetString("Html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*!
        /// * jQuery StoryQ 0.3.0
        /// *
        /// * Copyright (c) 2010 todd@goneopen.com 
        /// * Dual licensed under the MIT (MIT-LICENSE.txt)
        /// * and GPL (GPL-LICENSE.txt) licenses.
        /// *
        /// * http://github.com/toddb/jquery.storyq
        /// */
        /// 
        /// ;(function($) {
        ///  
        ///  $.storyq = {
        ///		VERSION: &quot;0.3.0&quot;,
        ///		defaults: {
        ///			success: null,
        ///			url: null,
        ///			data: null,
        ///			summary: &apos;summary&apos;,
        ///			tree: &apos;tree&apos;,
        ///			minHeight: 100,
        ///			minWidth: 600
        ///		}
        ///	};
        ///
        ///	$.fn.extend({	  
        ///	  storyq: function(settings) {   
        ///      settings = $.extend({}, $.storyq.defaults,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_storyq {
            get {
                return ResourceManager.GetString("jquery_storyq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * Treeview 1.4 - jQuery plugin to hide and show branches of a tree
        /// * 
        /// * http://bassistance.de/jquery-plugins/jquery-plugin-treeview/
        /// * http://docs.jquery.com/Plugins/Treeview
        /// *
        /// * Copyright (c) 2007 Jörn Zaefferer
        /// *
        /// * Dual licensed under the MIT and GPL licenses:
        /// *   http://www.opensource.org/licenses/mit-license.php
        /// *   http://www.gnu.org/licenses/gpl.html
        /// *
        /// * Revision: $Id: jquery.treeview.js 4684 2008-02-07 19:08:06Z joern.zaefferer $
        /// *
        /// */
        ///
        ///;(function($) {
        ///
        ///	$.extend($.fn, {
        ///		swapClass:  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string jquery_treeview {
            get {
                return ResourceManager.GetString("jquery_treeview", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap minus {
            get {
                object obj = ResourceManager.GetObject("minus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap passed {
            get {
                object obj = ResourceManager.GetObject("passed", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap passedproject {
            get {
                object obj = ResourceManager.GetObject("passedproject", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap passedscenario {
            get {
                object obj = ResourceManager.GetObject("passedscenario", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pending {
            get {
                object obj = ResourceManager.GetObject("pending", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pendingproject {
            get {
                object obj = ResourceManager.GetObject("pendingproject", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap pendingscenario {
            get {
                object obj = ResourceManager.GetObject("pendingscenario", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap plus {
            get {
                object obj = ResourceManager.GetObject("plus", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /* Reset Base Font Size
        ///----------------------------------*/
        ///html,body{height:100%;margin:0;padding:0;}
        ///html&gt;body{font-size:16px;font-size:68.75%;}
        ///body{font-family:Verdana,helvetica,arial,sans-serif;font-size:68.75%;background:#fff;color:#333;}
        ///h1,h2{font-family:&apos;trebuchet ms&apos;,verdana,arial;padding:1em;margin:0}
        ///h1{font-size:large}
        ///a img{border:none;}
        ///
        ////* Global settings for widget
        ///----------------------------------*/
        ///#results{padding:1em;}
        ///#tree{border :1px solid #DDDDDD;border-bottom :5px solid #BEBEBE;p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string screen_storyq {
            get {
                return ResourceManager.GetString("screen_storyq", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .treeview, .treeview ul { 
        ///	padding: 0;
        ///	margin: 0;
        ///	list-style: none;
        ///}
        ///
        ///.treeview ul {
        ///	background-color: white;
        ///	margin-top: 4px;
        ///}
        ///
        ///.treeview .hitarea {
        ///	background: url(images/treeview-default.gif) -64px -25px no-repeat;
        ///	height: 16px;
        ///	width: 16px;
        ///	margin-left: -16px;
        ///	float: left;
        ///	cursor: pointer;
        ///}
        ////* fix for IE6 */
        ///* html .hitarea {
        ///	display: inline;
        ///	float:none;
        ///}
        ///
        ///.treeview li { 
        ///	margin: 0;
        ///	padding: 3px 0pt 3px 16px;
        ///}
        ///
        ///.treeview a.selected {
        ///	background-color: #eee;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string screen_treeview {
            get {
                return ResourceManager.GetString("screen_treeview", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap treeview_black {
            get {
                object obj = ResourceManager.GetObject("treeview_black", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_black_line {
            get {
                object obj = ResourceManager.GetObject("treeview_black_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_default {
            get {
                object obj = ResourceManager.GetObject("treeview_default", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_default_line {
            get {
                object obj = ResourceManager.GetObject("treeview_default_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_famfamfam {
            get {
                object obj = ResourceManager.GetObject("treeview_famfamfam", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_famfamfam_line {
            get {
                object obj = ResourceManager.GetObject("treeview_famfamfam_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_gray {
            get {
                object obj = ResourceManager.GetObject("treeview_gray", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_gray_line {
            get {
                object obj = ResourceManager.GetObject("treeview_gray_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_red {
            get {
                object obj = ResourceManager.GetObject("treeview_red", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap treeview_red_line {
            get {
                object obj = ResourceManager.GetObject("treeview_red_line", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
